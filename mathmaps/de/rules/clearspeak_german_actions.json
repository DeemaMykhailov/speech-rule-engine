{
  "locale": "de",
  "domain": "clearspeak",
  "modality": "speech",
  "kind": "actions",
  "rules": [
    [
      "Action",
      "collapsed",
      "[n] . (engine:modality=summary,grammar:collapsed); [t] \"kollabiert\""
    ],
    [
      "Action",
      "font",
      "[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:\"short\")"
    ],
    [
      "Action",
      "font-number",
      "[t] @font (grammar:localFontNumber); [n] . (grammar:ignoreFont=@font)"
    ],
    [
      "Action",
      "font-identifier",
      "[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:\"short\")"
    ],
    [
      "Action",
      "font-double-struck",
      "[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont)"
    ],
    [
      "Action",
      "font-number-double-struck",
      "[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFontNumber)"
    ],
    [
      "Action",
      "punctuation-lr",
      "[p] (pause:\"short\"); [n] text() (pause:\"short\")"
    ],
    [
      "Action",
      "punctuation",
      "[n] text()"
    ],
    [
      "Action",
      "punctuation-l",
      "[p] (pause:\"short\"); [n] text()"
    ],
    [
      "Action",
      "punctuation-r",
      "[n] text() (pause:\"short\")"
    ],
    [
      "Action",
      "ellipsis",
      "[t] \"und so weiter\""
    ],
    [
      "Action",
      "ellipsis-andsoon",
      "[t] \"und so weiter bis\""
    ],
    [
      "Action",
      "vbar-evaluated",
      "[n] children/*[1] (pause:\"short\"); [t] \"ausgewertet für\"; [n] content/*[1]/children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "vbar-evaluated-both",
      "[n] children/*[1] (pause:\"short\"); [t] \"ausgewertet für\"; [n] content/*[1]/children/*[2] (pause:\"short\"); [t] \"minus des gleichen Ausdrucks ausgewertet für\"; [n] content/*[1]/children/*[1]/children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "vbar-such-that",
      "[t] \"so dass\""
    ],
    [
      "Action",
      "vbar-divides",
      "[t] \"teilt\""
    ],
    [
      "Action",
      "vbar-always-divides",
      "[t] \"teilt\""
    ],
    [
      "Action",
      "vbar-given",
      "[t] \"für die gilt\""
    ],
    [
      "Action",
      "set-member",
      "[t] \"in\""
    ],
    [
      "Action",
      "set-member-element",
      "[t] \"Element von\""
    ],
    [
      "Action",
      "set-member-belongs",
      "[t] \"gehört zu\""
    ],
    [
      "Action",
      "set-not-member",
      "[t] \"nicht in\""
    ],
    [
      "Action",
      "set-not-member-element",
      "[t] \"kein Element von\""
    ],
    [
      "Action",
      "set-not-member-belongs",
      "[t] \"gehört nicht zu\""
    ],
    [
      "Action",
      "prime",
      "[n] children/*[1]; [n] children/*[2]"
    ],
    [
      "Action",
      "degrees",
      "[m] children/* (grammar:degree)"
    ],
    [
      "Action",
      "feet",
      "[n] children/*[1]; [t] \"ft\" (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "foot",
      "[n] children/*[1]; [t] \"ft\" (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "inches",
      "[n] children/*[1]; [t] \"in\" (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "inch",
      "[n] children/*[1]; [t] \"in\" (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "minutes",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "minute",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "seconds",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "second",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "degrees-angle",
      "[t] text() (grammar:annotation=\"unit\":translate:plural, pause:short)"
    ],
    [
      "Action",
      "degree-angle",
      "[t] text() (grammar:annotation=\"unit\":translate, pause:short)"
    ],
    [
      "Action",
      "minutes-angle",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "minute-angle",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "seconds-angle",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "second-angle",
      "[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "feet-length",
      "[n] children/*[1]; [t] \"ft\" (grammar:annotation=\"unit\":translate:plural, pause:short)"
    ],
    [
      "Action",
      "foot-length",
      "[n] children/*[1]; [t] \"ft\" (grammar:annotation=\"unit\":translate, pause:short)"
    ],
    [
      "Action",
      "inches-length",
      "[n] children/*[1]; ; [t] \"in\" (grammar:annotation=\"unit\":translate:plural, pause:short)"
    ],
    [
      "Action",
      "inch-length",
      "[n] children/*[1]; ; [t] \"in\" (grammar:annotation=\"unit\":translate, pause:short)"
    ],
    [
      "Action",
      "punctuated",
      "[m] children/*"
    ],
    [
      "Action",
      "function",
      "[n] text()"
    ],
    [
      "Action",
      "function-article",
      "[t] \"der\" (grammar:article); [n] text()"
    ],
    [
      "Action",
      "function-article-fem",
      "[t] \"die\" (grammar:article); [n] text()"
    ],
    [
      "Action",
      "appl",
      "[n] children/*[1]; [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "appl-simple",
      "[n] children/*[1]; [t] \"von\" (pause:\"short\"); [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "appl-simple-fenced",
      "[n] children/*[1]; [t] \"von\" (pause:\"short\"); [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "appl-times",
      "[p] (pause:\"short\"); [n] children/*[1]; [t] \"mal\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix",
      "[n] children/*[1]; [n] children/*[2]"
    ],
    [
      "Action",
      "binary-operation",
      "[n] . (grammar:impliedTimes, pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-simple-arg",
      "[n] children/*[1]; [n] children/*[2]"
    ],
    [
      "Action",
      "function-prefix-embell",
      "[p] (pause:\"short\"); [n] children/*[1]; [n] children/*[2] (pause:\"short\"); "
    ],
    [
      "Action",
      "function-prefix-fenced-or-frac-arg",
      "[p] (pause:\"short\"); [n] children/*[1] (grammar:addArticle); [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-subscript",
      "[p] (pause:\"short\"); [n] children/*[1] (grammar:addArticle); [t] \"von\" (pause:\"short\"); [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-ln",
      "[n] children/*[1]; [n] children/*[2]"
    ],
    [
      "Action",
      "function-ln-pause",
      "[n] children/*[1]; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "function-ln-of",
      "[n] children/*[1]; [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-ln-natlog",
      "[n] . (grammar:NatLog)"
    ],
    [
      "Action",
      "function-ln-natlog-pause",
      "[n] . (grammar:NatLog, pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-as-exp",
      "[n] children/*[1]; [t] \"von\" (pause:\"short\"); [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-subscript-as-exp",
      "[n] children/*[1]; [t] \"von\" (pause:\"short\"); [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-hyper",
      "[p] (pause:\"short\"); [n] children/*[1]; [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-inverse",
      "[p] (pause:\"short\"); [t] \"der\" (grammar:article); [t] \"inverse\" (grammar:masculine); [n] children/*[1]/children/*[1]; [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "appl-triginverse",
      "[p] (pause:\"short\"); [n] children/*[1]; [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-arc-simple",
      "[p] (pause:\"short\"); [t] \"Arkus\" (join:\"\"); [n] children/*[1]/children/*[1] (grammar:lowercase); [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-arc-simple-fenced",
      "[p] (pause:\"short\"); [t] \"Arkus\" (join:\"\"); [n] children/*[1]/children/*[1] (grammar:lowercase, pause:\"short\"); [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "function-prefix-arc",
      "[p] (pause:\"short\"); [t] \"Arkus\" (join:\"\"); [n] children/*[1]/children/*[1] (grammar:lowercase); [t] \"von\"; [n] children/*[2] (grammar:case=\"dative\", pause:\"short\")"
    ],
    [
      "Action",
      "function-inverse",
      "[n] children/*[1]; [t] \"invers\""
    ],
    [
      "Action",
      "superscript-prefix-function",
      "[t] \"die\" (grammar:article); [n] children/*[2] (grammar:ordinal); [t] \"Potenz von\"; [n] children/*[1]"
    ],
    [
      "Action",
      "function-no-inverse",
      "[n] . (grammar:functions_none)"
    ],
    [
      "Action",
      "superscript",
      "[n] children/*[1]; [t] \"mit Exponent\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"Ende Exponent\" (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-ordinal",
      "[n] children/*[1]; [t] \"hoch\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-ordinal-prefixop",
      "[n] children/*[1]; [t] \"hoch\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-ordinal-default",
      "[n] children/*[1]; [t] \"mit Exponent\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"Ende Exponent\" (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-simple-exponent",
      "[n] children/*[1]; [t] \"hoch\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-simple-exponent-end",
      "[n] children/*[1]; [t] \"hoch\"; [n] children/*[2]; "
    ],
    [
      "Action",
      "superscript-simple-power",
      "[n] children/*[1]; [t] \"potenziert mit\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-simple-power-end",
      "[n] children/*[1]; [t] \"potenziert mit\"; [n] children/*[2]; "
    ],
    [
      "Action",
      "superscript-ordinal-power",
      "[n] children/*[1]; [t] \"zur\"; [n] children/*[2] (grammar:ordinal,join:\"\"); [t] \"n Potenz\" (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-non-ordinal",
      "[n] children/*[1]; [t] \"zur negativ\"; [n] children/*[2]/children/*[1] (grammar:ordinal, join:\"\"); [t] \"n Potenz\" (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-simple-function-ordinal",
      "[t] \"die\" (grammar:article); [n] children/*[2] (grammar:ordinal); [t] \"Potenz von\" (pause:\"short\"); [n] children/*[1]"
    ],
    [
      "Action",
      "exponent",
      "[n] text() (join:\"\"); [t] \"te\""
    ],
    [
      "Action",
      "exponent-number",
      "[t] CSFwordOrdinal"
    ],
    [
      "Action",
      "exponent-zero",
      "[t] \"nullte\""
    ],
    [
      "Action",
      "superscript-simple-exp",
      "[n] children/*[1]; [t] \"mit Exponent\"; [n] children/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "superscript-simple-exp-end",
      "[n] children/*[1]; [t] \"mit Exponent\"; [n] children/*[2]; "
    ],
    [
      "Action",
      "superscript-simple-function-none",
      "[n] . (grammar:functions_none)"
    ],
    [
      "Action",
      "square",
      "[n] children/*[1]; [t] \"Quadrat\""
    ],
    [
      "Action",
      "cube",
      "[n] children/*[1]; [t] \"Kubik\""
    ],
    [
      "Action",
      "paren-simple",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "paren-simple-exp",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "paren-simple-nested-func",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "paren-simple-nested-func-no-bracket",
      "[n] children/*[1];"
    ],
    [
      "Action",
      "fences-open-close",
      "[p] (pause:\"short\"); [n] content/*[1] (grammar:spokenFence, pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (grammar:spokenFence, pause:\"short\")"
    ],
    [
      "Action",
      "paren-simple-nested-func-default",
      "[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "paren-simple-nested-func-none",
      "[p] (pause:\"short\"); [n] content/*[1] (grammar:spokenFence, pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (grammar:spokenFence, pause:\"short\")"
    ],
    [
      "Action",
      "fence-silent",
      "[p] (pause:\"short\"); [n] children/*[1] (pause:\"short\")"
    ],
    [
      "Action",
      "fences-open-close-none",
      "[p] (pause:\"short\"); [n] content/*[1] (grammar:spokenFence, pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (grammar:spokenFence, pause:\"short\")"
    ],
    [
      "Action",
      "fence-nesting",
      "[n] text() (grammar:insertNesting=CSFnestingDepth)"
    ],
    [
      "Action",
      "fence-no-nesting",
      "[n] text()"
    ],
    [
      "Action",
      "fences-points",
      "[t] \"der Punkt mit Koordinaten\"; [n] children/*[1]"
    ],
    [
      "Action",
      "fences-interval",
      "[t] \"das Interval von\"; [n] children/*[1]/children/*[1]; [t] \"bis\"; [n] children/*[1]/children/*[3] (pause:\"short\"); [n] . (grammar:interval)"
    ],
    [
      "Action",
      "interval-open",
      "[t] \"ohne\"; [n] children/*[1]/children/*[1]; [t] \"und\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "interval-closed-open",
      "[t] \"einschließlich\"; [n] children/*[1]/children/*[1] (pause:\"short\"); [t] \"aber ohne\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "interval-open-closed",
      "[t] \"ohne\"; [n] children/*[1]/children/*[1] (pause:\"short\"); [t] \"aber einschließlich\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "interval-closed",
      "[t] \"einschließlich\"; [n] children/*[1]/children/*[1]; [t] \"und\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "interval-open-inf-r",
      "[t] \"ohne\"; [n] children/*[1]/children/*[1]"
    ],
    [
      "Action",
      "interval-open-inf-l",
      "[t] \"ohne\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "interval-open-inf-lr",
      ""
    ],
    [
      "Action",
      "interval-closed-open-inf",
      "[t] \"einschließlich\"; [n] children/*[1]/children/*[1]"
    ],
    [
      "Action",
      "interval-open-closed-inf",
      "[t] \"einschließlich\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "paren-nested-embellished-funcs",
      "[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\")"
    ],
    [
      "Action",
      "set-empty",
      "[t]  \"die leere Menge\""
    ],
    [
      "Action",
      "set-extended",
      "[t] \"die Menge aller\"; [n] children/*[1]/children/*[1]; [t] \"mit\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "set-collection",
      "[t] \"die Menge\"; [n] children/*[1]"
    ],
    [
      "Action",
      "set-extended-woall",
      "[t] \"die Menge von\"; [n] children/*[1]/children/*[1]; [t] \"mit\"; [n] children/*[1]/children/*[3]"
    ],
    [
      "Action",
      "set-collection-silentbracket",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "subscript",
      "[p] (pause:short); [n] children/*[1]; [t] \"Index\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "logarithm-base",
      "[n] children/*[1]; [t] \"Basis\"; [n] children/*[2]"
    ],
    [
      "Action",
      "subscript-index",
      "[n] children/*[1]; [t] \"Index\"; [n] children/*[2]"
    ],
    [
      "Action",
      "fraction",
      "[p] (pause:short); [t] \"Bruch mit Zähler\"; [n] children/*[1] (pause:short); [t] \"und Nenner\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "fraction-none",
      "[p] (pause:short); [t] \"Bruch mit Zähler\"; [n] children/*[1] (pause:short); [t] \"und Nenner\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "simple-fraction",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "simple-vulgar-fraction",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "simple-text-fraction",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "vulgar-fraction",
      "[t] CSFvulgarFraction (grammar:correctOne)"
    ],
    [
      "Action",
      "fraction-over",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "fraction-overendfrac",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short); [t] \"Ende Bruch\" (pause:short)"
    ],
    [
      "Action",
      "fraction-fracover",
      "[p] (pause:short); [t] \"Bruch\"; [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "fraction-per",
      "[p] (pause:short); [n] children/*[1]; [t] \"per\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "fraction-generalendfrac",
      "[p] (pause:short); [t] \"Bruch mit Zähler\"; [n] children/*[1] (pause:short); [t] \"und Nenner\"; [n] children/*[2] (pause:short); [t] \"Ende Bruch\" (pause:short)"
    ],
    [
      "Action",
      "fraction-general",
      "[p] (pause:short); [t] \"Bruch mit Zähler\"; [n] children/*[1] (pause:short); [t] \"und Nenner\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "simple-vulgar-fraction-ordinal",
      "[t] CSFvulgarFraction (grammar:correctOne)"
    ],
    [
      "Action",
      "fraction-endfrac",
      "[p] (pause:short); [n] . (grammar:endfrac); [t] \"Ende Bruch\" (pause:short)"
    ],
    [
      "Action",
      "vulgar-fraction-endfrac",
      "[p] (pause:short); [n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "simple-vulgar-fraction-endfrac",
      "[t] CSFvulgarFraction (grammar:correctOne)"
    ],
    [
      "Action",
      "sqrt",
      "[t] \"Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-nested",
      "[p] (pause: \"short\"); [t] \"Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "negative-sqrt",
      "[t] \"negative Quadratwurzel aus\"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "negative-sqrt-default",
      "[p] (pause: \"short\"); [t] \"negative Quadratwurzel aus\"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-plus-minus",
      "[t] \"positive Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-nested-plus-minus",
      "[p] (pause: \"short\"); [t] \"positive Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-plus-minus-posnegsqrootend",
      "[t] \"positive Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-nested-plus-minus-posnegsqrootend",
      "[p] (pause: \"short\"); [t] \"positive Quadratwurzel aus\"; [n] children/*[1] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "sqrt-endroot",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "negative-sqrt-endroot",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "sqrt-posnegsqrootend",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "negative-sqrt-posnegsqrootend",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "cubic",
      "[t] \"Kubikwurzel aus\"; [n] children/*[2] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "cubic-nested",
      "[p] (pause:short); [t] \"Kubikwurzel aus\"; [n] children/*[2] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "root",
      "[t] \"die\" (grammar:article); [n] children/*[1] (grammar:ordinal); [t] \"Wurzel aus\"; [n] children/*[2] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "root-nested",
      "[p] (pause:short); [t] \"die\" (grammar:article); [n] children/*[1] (grammar:ordinal); [t] \"Wurzel aus\"; [n] children/*[2] (grammar:EndRoot=false, pause:short)"
    ],
    [
      "Action",
      "root-endroot",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "root-posnegsqrootend",
      "[n] . (grammar:EndRoot); [t] \"Wurzel Ende\" (pause:short)"
    ],
    [
      "Action",
      "negative",
      "[t] \"minus\"; [n] children/*[1]"
    ],
    [
      "Action",
      "positive",
      "[t] \"plus\"; [n] children/*[1]"
    ],
    [
      "Action",
      "angle-measure",
      "[t] \"das Maß des Winkels\"; [n] children/*[2] (grammar:angle)"
    ],
    [
      "Action",
      "prefix",
      "[m] content/* (grammar:prefix); [n] children/*[1]"
    ],
    [
      "Action",
      "postfix",
      "[n] children/*[1]; [m] content/* (grammar:postfix)"
    ],
    [
      "Action",
      "set-prefix-operators-masculine",
      "[t] \"der\" (grammar:article); [n] self::* (grammar:!prefix); [t] \"von\""
    ],
    [
      "Action",
      "set-prefix-operators-feminine",
      "[t] \"die\" (grammar:article); [n] self::* (grammar:!prefix); [t] \"von\""
    ],
    [
      "Action",
      "binary-operation-default",
      "[m] children/* (sepFunc:CTFcontentIterator);"
    ],
    [
      "Action",
      "division",
      "[n] children/*[1]; [t] \"geteilt durch\"; [n] children/*[2]"
    ],
    [
      "Action",
      "binary-operation-moreimpliedtimes",
      "[m] children/* (sepFunc:CTFcontentIterator);"
    ],
    [
      "Action",
      "binary-operation-pause",
      "[p] (pause:short); [m] children/* (sepFunc:CTFcontentIterator);"
    ],
    [
      "Action",
      "binary-operation-pause-r",
      "[m] children/* (sepFunc:CTFcontentIterator, pause:short)"
    ],
    [
      "Action",
      "binary-operation-pause-lr",
      "[p] (pause:short); [m] children/* (sepFunc:CTFcontentIterator, pause:short)"
    ],
    [
      "Action",
      "implicit-times",
      "[p] (pause:short)"
    ],
    [
      "Action",
      "implicit-times-default",
      ""
    ],
    [
      "Action",
      "implicit-times-simple",
      "[n] text()"
    ],
    [
      "Action",
      "implicit-times-moreimpliedtimes",
      "[n] text()"
    ],
    [
      "Action",
      "implicit-times-none",
      ""
    ],
    [
      "Action",
      "binary-operation-simple",
      "[m] children/* (rate:\"0.5\", pause:short)"
    ],
    [
      "Action",
      "simple-in-fraction",
      "[n] . (rate:\"0.5\",grammar:inFrac)"
    ],
    [
      "Action",
      "relseq",
      "[m] children/* (sepFunc:CTFcontentIterator)"
    ],
    [
      "Action",
      "multrel",
      "[m] children/* (sepFunc:CTFcontentIterator)"
    ],
    [
      "Action",
      "natural-numbers",
      "[t] \"die natürlichen Zahlen\""
    ],
    [
      "Action",
      "integers",
      "[t] \"die ganzen Zahlen\""
    ],
    [
      "Action",
      "rational-numbers",
      "[t] \"die rationalen Zahlen\""
    ],
    [
      "Action",
      "real-numbers",
      "[t] \"die reellen Zahlen\""
    ],
    [
      "Action",
      "complex-numbers",
      "[t] \"die komplexen Zahlen\""
    ],
    [
      "Action",
      "natural-numbers-super",
      "[t] \"n\" (join: \"-\"); [n] children/*[2] (grammar:numbers2alpha)"
    ],
    [
      "Action",
      "integers-super",
      "[t] \"z\" (join: \"-\"); [n] children/*[2] (grammar:numbers2alpha)"
    ],
    [
      "Action",
      "rational-numbers-super",
      "[t] \"q\" (join: \"-\"); [n] children/*[2] (grammar:numbers2alpha)"
    ],
    [
      "Action",
      "real-numbers-super",
      "[t] \"r\" (join:\"-\"); [n] children/*[2] (grammar:numbers2alpha)"
    ],
    [
      "Action",
      "complex-numbers-super",
      "[t] \"c\" (join:\"-\"); [n] children/*[2] (grammar:numbers2alpha)"
    ],
    [
      "Action",
      "natural-numbers-with-zero",
      "[t] \"die natürlichen Zahlen mit Null\""
    ],
    [
      "Action",
      "positive-integers",
      "[t] \"die positiven ganzen Zahlen\""
    ],
    [
      "Action",
      "negative-integers",
      "[t] \"die negativen ganzen Zahlen\""
    ],
    [
      "Action",
      "positive-rational-numbers",
      "[t] \"die positiven rationalen Zahlen\""
    ],
    [
      "Action",
      "negative-rational-numbers",
      "[t] \"die negativen rationalen Zahlen\""
    ],
    [
      "Action",
      "fences-neutral",
      "[p] (pause:short); [t] \"der Betrag von\"; [n] children/*[1] (pause: short)"
    ],
    [
      "Action",
      "fences-neutral-absend",
      "[p] (pause:short); [t] \"der Betrag von\"; [n] children/*[1] (pause: short); [t] \"Ende Betrag\" (pause: short)"
    ],
    [
      "Action",
      "fences-neutral-cardinality",
      "[p] (pause:short); [t] \"die Mächtigkeit der Menge\"; [n] children/*[1] (pause: short)"
    ],
    [
      "Action",
      "fences-neutral-determinant",
      "[p] (pause:short); [t] \"die Determinante von\"; [n] children/*[1] (pause: short)"
    ],
    [
      "Action",
      "matrix",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Matrize\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\", pause:long)"
    ],
    [
      "Action",
      "matrix-simple",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Matrize\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-trivial",
      "[t] \"die 1 mal 1 Matrize mit Element\"; [n] children/*[1] (pause:long)"
    ],
    [
      "Action",
      "determinant",
      "[t] \"die\" (grammar:article); [t] \"Determinante der\"; [t] count(children/*); [t] \"mal\"; [t] count(children/*[1]/children/*); [t] \"Matrize\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "determinant-simple",
      "[t] \"die\" (grammar:article); [t] \"Determinante der\"; [t] count(children/*); [t] \"mal\"; [t] count(children/*[1]/children/*); [t] \"Matrize\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\", pause:long)"
    ],
    [
      "Action",
      "matrix-vector",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Spaltenmatrize\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-vector-simple",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Spaltenmatrize\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-vector-simple-silentcolnum",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Spaltenmatrize\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-row-vector",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Zeilenmatrize\" (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTFnodeCounter,context:\"Spalte-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-row-vector-simple",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Zeilenmatrize\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-row-vector-simple-silentcolnum",
      "[t] \"die\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Zeilenmatrize\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "matrix-row-simple",
      "[m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\")"
    ],
    [
      "Action",
      "matrix-row-simple-silentcolnum",
      "[m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\")"
    ],
    [
      "Action",
      "line-simple",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "matrix-row",
      "[m] children/* (ctxtFunc:CTFnodeCounter,context:\"Spalte-,- \",sepFunc:CTFpauseSeparator,separator:\"medium\", pause:long)"
    ],
    [
      "Action",
      "matrix-cell",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "matrix-end-matrix",
      "[n] . (grammar:EndMatrix); [t] \"Ende Matrize\""
    ],
    [
      "Action",
      "matrix-end-vector",
      "[n] . (grammar:EndMatrix); [t] \"Ende Matrize\""
    ],
    [
      "Action",
      "matrix-end-determinant",
      "[n] . (grammar:EndMatrix); [t] \"Ende Determinante\""
    ],
    [
      "Action",
      "vector",
      "[t] \"der\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Spaltenvektor\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "vector-simple",
      "[t] \"der\" (grammar:article); [t] count(children/*);  [t] \"mal\"; [t] count(children/*[1]/children/*); [t] \"Spaltenvektor\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "row-vector",
      "[t] \"der\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Zeilenvektor\" (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTFnodeCounter,context:\"Spalte-:\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "row-vector-simple",
      "[t] \"der\" (grammar:article); [t] count(children/*);  [t] \"mal\";[t] count(children/*[1]/children/*); [t] \"Zeilenvektor\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator,separator:\"short\",grammar:simpleDet, pause:long)"
    ],
    [
      "Action",
      "vector-end-matrix",
      "[n] . (grammar:EndMatrix); [t] \"Ende Matrize\""
    ],
    [
      "Action",
      "vector-end-vector",
      "[n] . (grammar:EndMatrix); [t] \"Ende Vektor\""
    ],
    [
      "Action",
      "vector-end-vector-endvector",
      "[n] . (grammar:EndMatrix); [t] \"Ende Vektor\""
    ],
    [
      "Action",
      "vector-end-determinant",
      "[n] . (grammar:EndMatrix); [t] \"Ende Determinante\""
    ],
    [
      "Action",
      "binomial",
      "[n] children/*[1]/children/*[1]; [t] \"über\"; [n] children/*[2]/children/*[1]; "
    ],
    [
      "Action",
      "lines-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Zeilen\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-summary-none",
      "[n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "cases-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Fälle\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "cases-summary-none",
      "[n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "line",
      "[n] children/*[1]"
    ],
    [
      "Action",
      "row-medium",
      "[m] children/* (sepFunc:CTFpauseSeparator,separator:\"medium\")"
    ],
    [
      "Action",
      "row-long",
      "[m] children/* (sepFunc:CTFpauseSeparator,separator:\"long\")"
    ],
    [
      "Action",
      "row-short",
      "[m] children/* (sepFunc:CTFpauseSeparator,separator:\"short\")"
    ],
    [
      "Action",
      "blank-cell",
      "[t] \"leer\""
    ],
    [
      "Action",
      "blank-line",
      "[t] \"leer\""
    ],
    [
      "Action",
      "blank-cell-empty",
      "[t] \"leer\""
    ],
    [
      "Action",
      "blank-line-empty",
      "[t] \"leer\""
    ],
    [
      "Action",
      "cases",
      "[p] (pause:short);  [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Fall-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-cases-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Fälle\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-cases",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Fall-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-equations-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Gleichungen\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-equations",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Gleichung-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-steps-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Rechenschritte\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-steps",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Schritt-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-rows-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Zeilen\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-rows",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Zeile-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-constraints-summary",
      "[p] (pause:short); [t] count(children/*); [t] \"Bedingungen\";  [n] . (grammar:layoutSummary)"
    ],
    [
      "Action",
      "lines-constraints",
      "[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter,context:\"Bedingung-:\",sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "lines-none",
      "[p] (pause:short); [m] children/* (sepFunc:CTFpauseSeparator,separator:\"long\", pause:long)"
    ],
    [
      "Action",
      "bigop",
      "[n] children/*[1]; [t] \"über\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "limboth",
      "[n] children/*[1]; [t] \"von\"; [n] children/*[2];[t] \"bis\"; [n] children/*[3];"
    ],
    [
      "Action",
      "limlower",
      "[n] children/*[1]; [t] \"über\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "limupper",
      "[n] children/*[1]; [t] \"unter\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "integral",
      "[t] \"das\"; [n] children/*[1]; [t] \"über\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "overscript",
      "[n] children/*[1]; [t] \"unter\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "overscript-accent",
      "[n] children/*[1]; [n] children/*[2];"
    ],
    [
      "Action",
      "overscript-limits",
      "[n] children/*[1]; [t] \"bis\"; [n] children/*[2]"
    ],
    [
      "Action",
      "underscript",
      "[n] children/*[1]; [t] \"über\"; [n] children/*[2] (pause:short)"
    ],
    [
      "Action",
      "underscript-limits",
      "[n] children/*[1]; [t] \"von\"; [n] children/*[2]"
    ],
    [
      "Action",
      "number",
      "[n] text()"
    ],
    [
      "Action",
      "mixed-number",
      "[n] children/*[1]; [n] children/*[2]; "
    ],
    [
      "Action",
      "number-with-chars",
      "[t] \"Zahl\"; [m] CQFspaceoutNumber (grammar:protected)"
    ],
    [
      "Action",
      "decimal-period",
      "[t] \"Dezimalbruch\"; [n] children/*[1] (grammar:spaceout); [t] \"Komma mit Periode\";  [n] children/*[3]/children/*[1] (grammar:spaceout)"
    ],
    [
      "Action",
      "decimal-period-float",
      "[t] \"Dezimalbruch\"; [n] children/*[1] (grammar:spaceout); [t] \"mit Periode\";  [n] children/*[2]/children/*[1] (grammar:spaceout);"
    ],
    [
      "Action",
      "decimal-period-singular",
      "[t] \"Dezimalbruch\"; [n] children/*[1] (grammar:spaceout); [t] \"Komma mit Periode\";  [n] children/*[3]/children/*[1] (grammar:spaceout)"
    ],
    [
      "Action",
      "decimal-period-singular-float",
      "[t] \"Dezimalbruch\"; [n] children/*[1] (grammar:spaceout); [t] \"mit Periode\";  [n] children/*[2]/children/*[1] (grammar:spaceout);"
    ],
    [
      "Action",
      "number-with-spaces",
      "[m] CQFspaceoutNumber (grammar:!spaceout:number)"
    ],
    [
      "Action",
      "decimal-point",
      "[t] \"Komma\""
    ],
    [
      "Action",
      "line-segment",
      "[t] \"die Strecke\"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2] (pause:short)"
    ],
    [
      "Action",
      "conjugate",
      "[t] \"die komplexe Konjugation von\"; [n] children/*[1]"
    ],
    [
      "Action",
      "defined-by",
      "[t] \"ist definiert als\" (pause:short)"
    ],
    [
      "Action",
      "adorned-sign",
      "[n] children/*[1] ; [t] \"Zeichen mit darüberstehendem\"; [n] children/*[2]"
    ],
    [
      "Action",
      "factorial",
      "[t] \"Fakultät\""
    ],
    [
      "Action",
      "tensor-base",
      "[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]"
    ],
    [
      "Action",
      "left-super",
      "[t] \"linker oberer Index\"; [n] text()"
    ],
    [
      "Action",
      "left-super-list",
      "[t] \"linker oberer Index\"; [m] children/*"
    ],
    [
      "Action",
      "left-sub",
      "[t] \"linker unterer Index\"; [n] text()"
    ],
    [
      "Action",
      "left-sub-list",
      "[t] \"linker unterer Index\"; [m] children/*"
    ],
    [
      "Action",
      "right-super",
      "[t] \"rechter oberer Index\"; [n] text()"
    ],
    [
      "Action",
      "right-super-list",
      "[t] \"rechter oberer Index\"; [m] children/*"
    ],
    [
      "Action",
      "right-sub",
      "[t] \"rechter unterer Index\"; [n] text()"
    ],
    [
      "Action",
      "right-sub-list",
      "[t] \"rechter unterer Index\"; [m] children/*"
    ],
    [
      "Action",
      "empty-index",
      "[p] (pause:medium)"
    ],
    [
      "Action",
      "combinatorics",
      "[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics)"
    ],
    [
      "Action",
      "choose",
      "[n] children/*[4] (grammar:combinatorics); [t] \"aus\"; [n] children/*[2] (grammar:combinatorics)"
    ],
    [
      "Action",
      "permute",
      "[n] children/*[4] (grammar:combinatorics); [t] \"Permutionen von\"; [n] children/*[2] (grammar:combinatorics)"
    ],
    [
      "Action",
      "unit-singular",
      "[t] text() (grammar:annotation=\"unit\":translate)"
    ],
    [
      "Action",
      "unit-plural",
      "[t] text() (grammar:annotation=\"unit\":translate:plural)"
    ],
    [
      "Action",
      "unit-square",
      "[t] \"Quadrat\" (join:\"\"); [n] children/*[1] (grammar:lowercase)"
    ],
    [
      "Action",
      "unit-cubic",
      "[t] \"Kubik\" (join:\"\"); [n] children/*[1] (grammar:lowercase)"
    ],
    [
      "Action",
      "unit-reciprocal",
      "[n] children/*[1]; [t] \"invers\""
    ],
    [
      "Action",
      "unit-reciprocal-singular",
      "[t] \"pro\"; [n] children/*[1]"
    ],
    [
      "Action",
      "unit-combine",
      "[m] children/*"
    ],
    [
      "Action",
      "unit-combine-singular",
      "[n] children/*[1]; [n] children/*[2] (grammar:singularUnit); [m] children/*[position()>2]"
    ],
    [
      "Action",
      "unit-divide",
      "[n] children/*[1]; [t] \"pro\"; [n] children/*[2]"
    ],
    [
      "Action",
      "currency",
      "[m] children/*[position()>1]; [n] children/*[1];"
    ],
    [
      "Action",
      "currency-position",
      "[m] children/*"
    ],
    [
      "Action",
      "currency-prefix",
      "[n] children/*[last()]; [m] children/*[position()<last()]; "
    ]
  ]
}
